"""action_percent

Revision ID: 53b03e5f5147
Revises: f1fe59b637f7
Create Date: 2024-11-25 20:50:46.160606

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '53b03e5f5147'
down_revision: Union[str, None] = 'f1fe59b637f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
 
    # Cast strings as integers in two steps
    op.add_column(
        'account',
        sa.Column('user_ids_temp', postgresql.ARRAY(sa.Integer()), nullable=True)
    )
    op.execute("""
        UPDATE account
        SET user_ids_temp = ARRAY(
            SELECT CAST(elem AS INTEGER)
            FROM unnest(user_ids) elem
        )
    """)
    op.drop_column('account', 'user_ids')
    op.alter_column('account', 'user_ids_temp', new_column_name='user_ids')

    op.add_column('granularcertificateaction', sa.Column('certificate_bundle_percentage', sa.Float(), nullable=True))
    op.alter_column('granularcertificatebundle', 'bundle_id_range_start',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('granularcertificatebundle', 'bundle_id_range_end',
               existing_type=sa.BIGINT(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('granularcertificatebundle', 'bundle_id_range_end',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('granularcertificatebundle', 'bundle_id_range_start',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.drop_column('granularcertificateaction', 'certificate_bundle_percentage')
    
    # Cast integers as strings in two steps
    op.add_column(
        'account',
        sa.Column('user_ids_temp', postgresql.ARRAY(sa.VARCHAR()), nullable=True)
    )
    op.execute("""
        UPDATE account
        SET user_ids_temp = ARRAY(
            SELECT CAST(elem AS VARCHAR)
            FROM unnest(user_ids) elem
        )
    """)
    op.drop_column('account', 'user_ids')
    op.alter_column('account', 'user_ids_temp', new_column_name='user_ids')
    # ### end Alembic commands ###