"""action_model_updates

Revision ID: 4e7cd9131146
Revises: 53b03e5f5147
Create Date: 2024-11-26 22:17:43.390346

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4e7cd9131146'
down_revision: Union[str, None] = '53b03e5f5147'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    certificate_action_type_enum = sa.Enum(
        'TRANSFER',
        'RECURRING_TRANSFER',
        'CANCEL',
        'RECURRING_CANCEL',
        'CLAIM',
        'RECURRING_CLAIM',
        'WITHDRAW',
        'LOCK',
        'RESERVE',
        name='certificateactiontype'
    )
    certificate_action_type_enum.create(op.get_bind(), checkfirst=True)

    op.alter_column(
        'granularcertificateaction',
        'action_type',
        existing_type=sa.VARCHAR(),
        type_=certificate_action_type_enum,
        nullable=False,
        postgresql_using="action_type::certificateactiontype"
    )
    op.add_column('granularcertificateaction', sa.Column('localise_time', sa.Boolean(), nullable=False))
    op.drop_column('granularcertificateaction', 'action_request_datetime_local')
    op.drop_column('granularcertificateaction', 'certificate_period_start')
    op.drop_column('granularcertificateaction', 'certificate_status_to_update_to')
    op.drop_column('granularcertificateaction', 'action_complete_datetime_local')
    op.drop_column('granularcertificateaction', 'device_id')
    op.drop_column('granularcertificateaction', 'target_id')
    op.drop_column('granularcertificateaction', 'source_certificate_bundle_id_range_start')
    op.drop_column('granularcertificateaction', 'recurring_action_period_quantity')
    op.drop_column('granularcertificateaction', 'beneficiary')
    op.drop_column('granularcertificateaction', 'energy_source')
    op.drop_column('granularcertificateaction', 'recurring_action_period_units')
    op.drop_column('granularcertificateaction', 'certificate_period_end')
    op.drop_column('granularcertificateaction', 'source_certificate_issuance_id')
    op.drop_column('granularcertificateaction', 'initial_action_datetime')
    op.drop_column('granularcertificateaction', 'number_of_recurring_actions')
    op.drop_column('granularcertificateaction', 'source_certificate_bundle_id_range_end')
    op.drop_column('granularcertificateaction', 'is_deleted')
    op.drop_column('granularcertificateaction', 'action_response_status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('granularcertificateaction', sa.Column('action_response_status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('granularcertificateaction', sa.Column('source_certificate_bundle_id_range_end', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('number_of_recurring_actions', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('initial_action_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('source_certificate_issuance_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('certificate_period_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('recurring_action_period_units', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('energy_source', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('beneficiary', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('recurring_action_period_quantity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('source_certificate_bundle_id_range_start', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('target_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('action_complete_datetime_local', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('certificate_status_to_update_to', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('certificate_period_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('granularcertificateaction', sa.Column('action_request_datetime_local', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('granularcertificateaction', 'localise_time')
    op.alter_column(
        'granularcertificateaction',
        'action_type',
        existing_type=sa.Enum(
            'TRANSFER',
            'RECURRING_TRANSFER',
            'CANCEL',
            'RECURRING_CANCEL',
            'CLAIM',
            'RECURRING_CLAIM',
            'WITHDRAW',
            'LOCK',
            'RESERVE',
            name='certificateactiontype'
        ),
        type_=sa.VARCHAR(),
        nullable=True
    )
    
    # ### end Alembic commands ###