services:
  gc_registry:
    restart: no
    env_file:
      - .env
      - .env.ci
    environment:
      - TC_HOST=host.docker.internal
      - ENVIRONMENT=CI

    build:
      context: .
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - db_write
      - db_read
      - eventstore.db

  db_write:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  db_read:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  eventstore.db:
    image: eventstore/eventstore:23.10.2-bookworm-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
      - EVENTSTORE_TELEMETRY_OPTOUT=true
      - DOTNET_EnableWriteXorExecute=0
      - EVENTSTORE_ADVERTISE_HOST_TO_CLIENT_AS=localhost
      - EVENTSTORE_ADVERTISE_NODE_PORT_TO_CLIENT_AS=2113
    ports:
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

volumes:
  gc_registry:
  postgres_data_write:
  postgres_data_read:
  eventstore-volume-data:
  eventstore-volume-logs:
